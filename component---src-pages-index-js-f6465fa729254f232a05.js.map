{"version":3,"file":"component---src-pages-index-js-f6465fa729254f232a05.js","mappings":"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","sources":["webpack://e-trifonova/./src/components/header/header.js","webpack://e-trifonova/./src/components/footer/footer.js","webpack://e-trifonova/./src/components/layout/layout.js","webpack://e-trifonova/./src/components/seo.js","webpack://e-trifonova/./src/components/hero/hero.js","webpack://e-trifonova/./src/pages/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Logo from \"../../assets/svg/logo_gray.svg\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <header className=\"grid-container\">\r\n      <div className=\"header__container\">\r\n        <Link className=\"header__logo\" to=\"/\">\r\n          <Logo className=\"header__logo-img\" />\r\n        </Link>\r\n\r\n        {/* Burger Menu Button */}\r\n        <button\r\n          className={`burger-menu ${isOpen ? \"burger-menu--open\" : \"\"}`}\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          aria-label=\"Toggle navigation\"\r\n          aria-expanded={isOpen}\r\n        >\r\n          <span className=\"burger-menu__line\"></span>\r\n          <span className=\"burger-menu__line\"></span>\r\n          <span className=\"burger-menu__line\"></span>\r\n        </button>\r\n\r\n        {/* Navigation */}\r\n        <nav className={`nav ${isOpen ? \"nav--open\" : \"\"}`}>\r\n          <ul className=\"nav__list menu-items\">\r\n            <li className=\"nav__list-item\">\r\n              <Link\r\n                className=\"nav__link\"\r\n                to=\"/about\"\r\n                activeClassName=\"active\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                Автор\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav__list-item\">\r\n              <Link\r\n                className=\"nav__link\"\r\n                to=\"/blog\"\r\n                activeClassName=\"active\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                Блог\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav__list-item\">\r\n              <Link\r\n                className=\"nav__link\"\r\n                to=\"/verbsExerciser\"\r\n                activeClassName=\"active\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                Глаголы\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./footer.css\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"grid-container\">\r\n      <div className=\"footer_copyright\">\r\n        © {new Date().getFullYear()} &middot; Елена Трифонова\r\n      </div>\r\n      {/* <div className=\"footer_social-list\">\r\n        <ul>\r\n          <li>\r\n            <a\r\n              href=\"https://web.telegram.org/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <div className=\"footer_icon\">TG</div>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://vk.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <div className=\"footer_icon\">VK</div>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"https://github.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <div className=\"footer_icon\">GH</div>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div> */}\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"../header/header\"\r\nimport Footer from \"../footer/footer\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <main className=\"grid-container\">{children}</main>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import * as React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n  const defaultTitle = site.siteMetadata?.title;\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Seo;\r\n","import * as React from \"react\";\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport \"./hero.css\";\r\n\r\nconst Hero = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      file(relativePath: { eq: \"hero.jpg\" }) {\r\n        childImageSharp {\r\n          gatsbyImageData(\r\n            layout: FULL_WIDTH\r\n            placeholder: BLURRED\r\n            quality: 80\r\n            formats: [AUTO, WEBP, AVIF]\r\n          )\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const heroImage = getImage(data.file.childImageSharp.gatsbyImageData);\r\n\r\n  return (\r\n    <div className=\"grid-container hero\" id=\"home\">\r\n      <div className=\"hero__content\">\r\n        <h1>{data.site.siteMetadata?.title}</h1>\r\n        <p>\r\n          Меня зовут Елена, и я профессиональный преподаватель английского с\r\n          опытом 14 лет и начинающий веб-разработчик. Провожу занятия онлайн с\r\n          использованием удобных и современных технологий.\r\n        </p>\r\n\r\n        <div className=\"website__header-content_about-link\">\r\n          <Link to=\"/about\">Подробнее обо мне</Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"hero__image\">\r\n        <GatsbyImage image={heroImage} alt=\"Hero Image\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Hero from \"../components/hero/hero\"\r\n\r\nexport default function Home({ data }) {\r\n  const posts = data.allWpPost.nodes\r\n\r\n  // Function to limit excerpt length and add link\r\n  const getLimitedExcerpt = (htmlString, charLimit, slug) => {\r\n    // Remove HTML tags\r\n    const textOnly = htmlString.replace(/<[^>]+>/g, \"\")\r\n    // Truncate to specified length and add link if truncated\r\n    if (textOnly.length > charLimit) {\r\n      return (\r\n        <>\r\n          {textOnly.substring(0, charLimit)}\r\n          <Link to={`/blog/${slug}`} className=\"read-more\">\r\n            {\" \"}\r\n            [...]\r\n          </Link>\r\n        </>\r\n      )\r\n    }\r\n    return textOnly\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"home\" />\r\n      <Hero />\r\n      <div className=\"latestBlogPosts_container\">\r\n        <h1>Блог</h1>\r\n        <div className=\"latestBlogPosts__posts\">\r\n          {posts.slice(0, 3).map((post, index) => (\r\n            <div key={index}>\r\n              <h4>{post.title}</h4>\r\n\r\n              <p>{getLimitedExcerpt(post.excerpt, 200, post.slug)}</p>\r\n              <Link to={`/blog/${post.slug}`}>\r\n                <p>Читать</p>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query blogPostsQuery {\r\n    allWpPost(sort: { date: DESC }) {\r\n      nodes {\r\n        title\r\n        excerpt\r\n        content\r\n        slug\r\n        categories {\r\n          nodes {\r\n            name\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["isOpen","setIsOpen","useState","className","to","onClick","activeClassName","Date","getFullYear","children","data","useStaticQuery","siteTitle","site","siteMetadata","title","description","metaDescription","defaultTitle","name","content","property","author","heroImage","getImage","file","childImageSharp","gatsbyImageData","id","G","image","alt","Home","posts","allWpPost","nodes","slice","map","post","index","key","htmlString","charLimit","slug","textOnly","replace","length","substring","getLimitedExcerpt","excerpt"],"sourceRoot":""}